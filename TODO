
* Support schema changes in SQL backend. While the right way to do this
  is to declare migrations, it would fit badly with the generic abstraction:
  we should probably just detect the simple table/attribute changes, and
  leave the more complex diffs (data-preserving attribute renaming) to
  the user.

* Consider refactoring the DbApi / Session split, which does not make
  much sense anymore now that there are many other backends beyond
  SQLAlchemy. The original design of the Session API was meant to
  allow using straightforward SQLAlchemy session objects, but we could
  inject a wrapper there, gaining more simplicity for all the other
  backends.
